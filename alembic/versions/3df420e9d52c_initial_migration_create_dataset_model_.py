"""Initial migration - create dataset, model_version, prediction_run tables

Revision ID: 3df420e9d52c
Revises: 
Create Date: 2025-09-10 21:20:50.550155

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3df420e9d52c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dataset',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('raw_filename', sa.String(length=255), nullable=False),
    sa.Column('source_platform', sa.String(length=50), nullable=False),
    sa.Column('channel', sa.String(length=50), nullable=True),
    sa.Column('game', sa.String(length=255), nullable=False),
    sa.Column('countries', sa.JSON(), nullable=True),
    sa.Column('records', sa.Integer(), nullable=False),
    sa.Column('ingest_started_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('ingest_completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('data_start_date', sa.Date(), nullable=True),
    sa.Column('data_end_date', sa.Date(), nullable=False),
    sa.Column('storage_path', sa.String(length=500), nullable=True),
    sa.Column('canonical_name', sa.String(length=255), nullable=True),
    sa.Column('schema_fingerprint', sa.String(length=64), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('canonical_name')
    )
    op.create_index('idx_dataset_canonical_name', 'dataset', ['canonical_name'], unique=False)
    op.create_index('idx_dataset_game', 'dataset', ['game'], unique=False)
    op.create_index('idx_dataset_ingest_date', 'dataset', ['ingest_started_at'], unique=False)
    op.create_index('idx_dataset_platform', 'dataset', ['source_platform'], unique=False)
    op.create_table('model_version',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('model_name', sa.String(length=255), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('target_day', sa.Integer(), nullable=False),
    sa.Column('train_dataset_ids', sa.JSON(), nullable=False),
    sa.Column('feature_set_fingerprint', sa.String(length=64), nullable=True),
    sa.Column('train_end_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=False),
    sa.Column('metrics_json', sa.JSON(), nullable=True),
    sa.Column('artifact_path', sa.String(length=500), nullable=True),
    sa.Column('params_json', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model_name', 'version', name='uq_model_name_version')
    )
    op.create_index('idx_model_created_at', 'model_version', ['created_at'], unique=False)
    op.create_index('idx_model_name', 'model_version', ['model_name'], unique=False)
    op.create_index('idx_model_target_day', 'model_version', ['target_day'], unique=False)
    op.create_table('prediction_run',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('model_version_id', sa.UUID(), nullable=False),
    sa.Column('dataset_id', sa.UUID(), nullable=False),
    sa.Column('requested_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('n_rows', sa.Integer(), nullable=False),
    sa.Column('targets', sa.JSON(), nullable=True),
    sa.Column('output_path', sa.String(length=500), nullable=True),
    sa.Column('summary_json', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.id'], ),
    sa.ForeignKeyConstraint(['model_version_id'], ['model_version.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_prediction_dataset', 'prediction_run', ['dataset_id'], unique=False)
    op.create_index('idx_prediction_model', 'prediction_run', ['model_version_id'], unique=False)
    op.create_index('idx_prediction_requested', 'prediction_run', ['requested_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_prediction_requested', table_name='prediction_run')
    op.drop_index('idx_prediction_model', table_name='prediction_run')
    op.drop_index('idx_prediction_dataset', table_name='prediction_run')
    op.drop_table('prediction_run')
    op.drop_index('idx_model_target_day', table_name='model_version')
    op.drop_index('idx_model_name', table_name='model_version')
    op.drop_index('idx_model_created_at', table_name='model_version')
    op.drop_table('model_version')
    op.drop_index('idx_dataset_platform', table_name='dataset')
    op.drop_index('idx_dataset_ingest_date', table_name='dataset')
    op.drop_index('idx_dataset_game', table_name='dataset')
    op.drop_index('idx_dataset_canonical_name', table_name='dataset')
    op.drop_table('dataset')
    # ### end Alembic commands ###
